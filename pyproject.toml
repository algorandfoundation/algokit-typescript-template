[tool.poetry]
name = "copier-testing-template"
version = "0.1.0"
description = ""
authors = ["MakerX <cto@makerx.com.au>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.0"
black = { extras = ["d"], version = "^24.10.0" }
flake8 = "^6.0.0"
pytest = "^8.3.2"
mypy = "^1.15.0"
pre-commit = "^4.0.1"
types-pyyaml = "^6.0.12.9"
pytest-xdist = "^3.3.1"
puyapy = "^4.5.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint]
select = [
  "E",
  "F",
  "ANN",
  "UP",
  "N",
  "C4",
  "B",
  "A",
  "YTT",
  "W",
  "FBT",
  "Q",
  "RUF",
  "I",
]
ignore = [
  "RET505", # allow else after return
  "SIM108", # allow if-else in place of ternary
  "E111",   # indentation is not a multiple of four
  "E117",   # over-indented
  "ISC001", # single line implicit string concatenation
  "ISC002", # multi line implicit string concatenation
  "Q000",   # bad quotes inline string
  "Q001",   # bad quotes multiline string
  "Q002",   # bad quotes docstring
  "Q003",   # avoidable escaped quotes
  "W191",   # indentation contains tabs
]
unfixable = ["B", "RUF"]


[tool.ruff]
extend-exclude = [
  "examples/*",       # Ignoring generated tests, ruff specific errors are to be caught by pytest
  "template_content",
  ".git",
  ".mypy_cache",
  ".ruff_cache",
]

[tool.pytest.ini_options]
pythonpath = ["tests"]
testpaths = ["tests"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
allow_untyped_defs = false
strict_equality = true
